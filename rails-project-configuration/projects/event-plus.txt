event-plus

------------------------------------------------------------------------------------
rails new event-plus --api --minimal
rails new test --api --minimal -d=postgresql -T â€” webpack=react
------------------------------------------------------------------------------------
add:  require "active_storage/engine"
to: 	config/application.rb 
rails active_storage:install
------------------------------------------------------------------------------------


application.rb
Bundler.require(*Rails.groups)
------------------------------------------------------------------------------------
# Dotenv::Railtie.load
# require "dotenv"
# Dotenv.load('./.env')
------------------------------------------------------------------------------------

consif/enviroment/development.rb
	config.active_storage.service = :amazon

------------------------------------------------------------------------------------
config/environments/production.rb
# Ensures that a master key has been made available in either ENV["RAILS_MASTER_KEY"]
# or in config/master.key. This key is used to decrypt credentials (and other encrypted files).
config.require_master_key = true


heroku config:set RAILS_MASTER_KEY=`cat config/credentials/production.key`
------------------------------------------------------------------------------------


1- add amazon parameters in config/storage.yml
amazon:
    service: S3
    access_key_id: <%= Rails.application.credentials.dig(:aws, :access_key_id) %>
    secret_access_key: <%= Rails.application.credentials.dig(:aws, :secret_access_key) %>
    region: <%= Rails.application.credentials.dig(:aws, :region) %>
    bucket: <%= Rails.application.credentials.dig(:aws, :bucket) %>

2- rails secret

3-
EDITOR="code --wait" bin/rails credentials:edit
EDITOR="code --wait" bin/rails credentials:edit --environment production
to edit crypted credentials.yml then ->
aws:
  access_key_id: "xxxxx"
  secret_access_key: "xxxxx"
  region: "xxxxx"
  bucket: "xxxxx"
------------------------------------------------------------------------------------
POSTGRES
https://learn.co/lessons/node-js-intro-to-postgresql

initdb /usr/local/var/postgres -E utf8 -U postgres
------------------------------------------------------------------------------------
npx create-react-app client --use-npm

1- add "proxy": "http://localhost:3000", -> to package.json
2- update -> "start": "PORT=4000 react-scripts start", -> in package.json
3- npm start --prefix client
------------------------------------------------------------------------------------

rails g resource User user_name:uniq  email:uniq password:digest
	rails g resource user_profile first_name last_name home_phone cell_phone job_title company website blog user:references
	rails g resource user_address address address_2 city state zip country user_profile:references

	rails g resource Event title organizer location start_date:datetime end_date:datetime start_time:datetime end_time:datetime display_start_time:boolean display_end_time:boolean time_zone user:references

		rails g resource eventType type event:references 
		rails g resource EventCategory category event:references
		rails g resource EventTag tag event:references
		rails g resource EventLocationType type event:references4
