c
@user.save
@user.valid?
@user
c
params
current_user
c
scope.is_attached?
c
self.image_file.attached?
self
c
UserSerializer.attributes
UserSerializer
email
self.object
object
scope
is_image
c
scope
object.is_attached?
object
c
self.object.se_allegato
self.object
c
self.object.image_file
self.object
c
params[:image_file].original_filename
params[:image_file]
params[:image_file].each do |file| file.original_filename end
params[:image_file].each do |file|
params[:image_file]
params[:image_file].content_type
params[:image_file].@content_type
params[:image_file].@content_type=
params[:image_file]
params.image_file
params
exit
c
User.find(1).base_uri
scope
object
current_user_is_owner
current_user
scope
object
scope == object
:user
user
object
UsersController.show
UsersController.module_parent
UsersController.methods.sort
UsersController.
UsersController
c
self.object.image_file.attached?
self.object.image_file
self.object
self.instance_options
self.
self.instance_options
self.methods
self.scope
id
scope
self
self.model
self.model_instance
model_instance
scope.current_user
scope
self.methods
self.current_user.image_file.attached?
self.current_user.image_file
self.current_user
self.methods
c
self.object
self.object.User
self.object.user
self.object
self
self.object.image_file.attached?
self.object.image_file
self
self.object
c
q
self.object.image_file.blob
self.object.image_file
self.object
self
self.object.image_file.blob
Rails.application.routes.url_helpers.rails_blob_url(self.object.image_file.blob, only_path: true)
self.object.image_file.blob
self.object.image_file
self.object
c
params
c
params
q
c
params
c
params
c
params
c
params
